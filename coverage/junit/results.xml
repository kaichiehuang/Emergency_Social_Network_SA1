<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="66" failures="11" time="20.972">
  <testsuite name="API USERS TEST" errors="0" failures="4" skipped="0" timestamp="2020-04-09T00:17:11" time="6.012" tests="10">
    <testcase classname="API USERS TEST Should insert  a new user" name="API USERS TEST Should insert  a new user" time="0.159">
    </testcase>
    <testcase classname="API USERS TEST Should not insert  a new user (empty fields)" name="API USERS TEST Should not insert  a new user (empty fields)" time="0.013">
    </testcase>
    <testcase classname="API USERS TEST Should get a list of users" name="API USERS TEST Should get a list of users" time="0.04">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 1
Received: 118
    at agent.get.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/users.test.js:76:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="API USERS TEST Should get a list of users filtered by keywords" name="API USERS TEST Should get a list of users filtered by keywords" time="0.02">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 1
Received: 3
    at agent.get.query.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/users.test.js:91:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="API USERS TEST Should get a list of users filtered by status" name="API USERS TEST Should get a list of users filtered by status" time="0.013">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 1
Received: 13
    at agent.get.query.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/users.test.js:104:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="API USERS TEST Should update user information (acknowledgement)" name="API USERS TEST Should update user information (acknowledgement)" time="0.013">
      <failure>TypeError: Cannot read property &apos;acknowledgement&apos; of undefined
    at agent.put.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/users.test.js:126:38)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
      <failure>Error: expect.assertions(1)

Expected one assertion to be called but received zero assertion calls.
    at Object.test (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/users.test.js:111:16)
    at Object.asyncJestTest (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
    at resolve (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/node_modules/jest-jasmine2/build/queueRunner.js:43:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
    at promise.then (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/node_modules/jest-jasmine2/build/queueRunner.js:73:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="API USERS TEST Should update user status" name="API USERS TEST Should update user status" time="0.011">
    </testcase>
    <testcase classname="API USERS TEST Should return an user" name="API USERS TEST Should return an user" time="0.01">
    </testcase>
    <testcase classname="Test Users with sockets should create relationshio between user and socket" name="Test Users with sockets should create relationshio between user and socket" time="0.154">
    </testcase>
    <testcase classname="Test Users with sockets should delete relationship between user and socket" name="Test Users with sockets should delete relationship between user and socket" time="0.151">
    </testcase>
  </testsuite>
  <testsuite name="public chat messages API test" errors="0" failures="3" skipped="0" timestamp="2020-04-09T00:17:17" time="1.85" tests="8">
    <testcase classname="public chat messages API test User1 create a new public message" name="public chat messages API test User1 create a new public message" time="0.023">
    </testcase>
    <testcase classname="public chat messages API test User1 create a new public message with error" name="public chat messages API test User1 create a new public message with error" time="0.004">
    </testcase>
    <testcase classname="public chat messages API test User1 create a new public message with user id error" name="public chat messages API test User1 create a new public message with user id error" time="0.012">
    </testcase>
    <testcase classname="public chat messages API test User1 receive public message" name="public chat messages API test User1 receive public message" time="0.055">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;This is a public message&quot;
Received: &quot;hola mundo 21313131313&quot;
    at agent.get.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/publicChatMessages.test.js:130:45)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="public chat messages API test User2 receive public message" name="public chat messages API test User2 receive public message" time="0.042">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;This is a public message&quot;
Received: &quot;hola mundo 21313131313&quot;
    at agent.get.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/publicChatMessages.test.js:142:45)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="public chat messages API test User3 receive public message" name="public chat messages API test User3 receive public message" time="0.039">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;This is a public message&quot;
Received: &quot;hola mundo 21313131313&quot;
    at agent.get.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/publicChatMessages.test.js:154:45)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="public chat messages API test User2 search with keyword" name="public chat messages API test User2 search with keyword" time="0.031">
    </testcase>
    <testcase classname="public chat messages API test User3 search with stop-word keyword" name="public chat messages API test User3 search with stop-word keyword" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="private chat messages API TEST" errors="0" failures="2" skipped="0" timestamp="2020-04-09T00:17:19" time="1.611" tests="8">
    <testcase classname="private chat messages API TEST Should create a new private msg" name="private chat messages API TEST Should create a new private msg" time="0.022">
    </testcase>
    <testcase classname="private chat messages API TEST Should get a list of private msg" name="private chat messages API TEST Should get a list of private msg" time="0.023">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 1
Received: 5
    at agent.get.query.query.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/privateChatMessages.test.js:82:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="private chat messages API TEST Should search a list of private msg" name="private chat messages API TEST Should search a list of private msg" time="0.033">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 1
Received: 5
    at agent.get.query.query.query.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/privateChatMessages.test.js:97:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="private chat messages API TEST Should not create a new private msg with an error input msg" name="private chat messages API TEST Should not create a new private msg with an error input msg" time="0.002">
    </testcase>
    <testcase classname="private chat messages API TEST Should not create a new private msg with an error input sender_user_id" name="private chat messages API TEST Should not create a new private msg with an error input sender_user_id" time="0.002">
    </testcase>
    <testcase classname="private chat messages API TEST Should not create a new private msg with an error input receiver_user_id" name="private chat messages API TEST Should not create a new private msg with an error input receiver_user_id" time="0.003">
    </testcase>
    <testcase classname="private chat messages API TEST Should not get a list of private msg with an error query" name="private chat messages API TEST Should not get a list of private msg with an error query" time="0.003">
    </testcase>
    <testcase classname="private chat messages API TEST Should not get a list of private msg with an error query receiver_user_id" name="private chat messages API TEST Should not get a list of private msg with an error query receiver_user_id" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Create Announcement API" errors="0" failures="2" skipped="0" timestamp="2020-04-09T00:17:20" time="1.736" tests="3">
    <testcase classname="Create Announcement API Should create an announcement" name="Create Announcement API Should create an announcement" time="0.074">
    </testcase>
    <testcase classname="Get Announcement API Should get all the announcement" name="Get Announcement API Should get all the announcement" time="0.142">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 3
Received: 103
    at agent.get.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/announcements.test.js:106:48)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
    <testcase classname="Get Announcement API Should get announcement filtered by keyword" name="Get Announcement API Should get announcement filtered by keyword" time="0.059">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 1
Received: 10
    at agent.get.query.query.query.query.accept.send.set.set.then.res (/Users/jplozgom/Documents/jp/labWeb/cmu/semestre1/FSE/team_SA1_ESN/tests/api/announcements.test.js:122:48)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)</failure>
    </testcase>
  </testsuite>
  <testsuite name="User registration " errors="0" failures="0" skipped="0" timestamp="2020-04-09T00:17:22" time="5.578" tests="26">
    <testcase classname="User registration  Registers a User to the database" name="User registration  Registers a User to the database" time="0.173">
    </testcase>
    <testcase classname="Business Validations for user raise error validating username with less than 3 characters" name="Business Validations for user raise error validating username with less than 3 characters" time="0.025">
    </testcase>
    <testcase classname="Business Validations for user raise error validating paaswords with less than 4 characters" name="Business Validations for user raise error validating paaswords with less than 4 characters" time="0.017">
    </testcase>
    <testcase classname="Business Validations for user should pass validation for banned user names" name="Business Validations for user should pass validation for banned user names" time="0.013">
    </testcase>
    <testcase classname="Business Validations for user should send an error for banned user names" name="Business Validations for user should send an error for banned user names" time="0.011">
    </testcase>
    <testcase classname="Business Validations for user should validate user names previously registered" name="Business Validations for user should validate user names previously registered" time="0.129">
    </testcase>
    <testcase classname="Business Validations for user should validate user names not registered" name="Business Validations for user should validate user names not registered" time="0.034">
    </testcase>
    <testcase classname="User password validations, should password match with the database password" name="User password validations, should password match with the database password" time="0.222">
    </testcase>
    <testcase classname="User password validations, should send an error message validating password,  password not matching" name="User password validations, should send an error message validating password,  password not matching" time="0.2">
    </testcase>
    <testcase classname="User password validations, should send an error message validation password,  user not exist" name="User password validations, should send an error message validation password,  user not exist" time="0.106">
    </testcase>
    <testcase classname="Searching for a user previously inserted searching a user by the username" name="Searching for a user previously inserted searching a user by the username" time="0.117">
    </testcase>
    <testcase classname="Searching for a user previously inserted update data of the user" name="Searching for a user previously inserted update data of the user" time="0.148">
    </testcase>
    <testcase classname="Searching for a user previously inserted update user status (specific status method)" name="Searching for a user previously inserted update user status (specific status method)" time="0.3">
    </testcase>
    <testcase classname="Searching for a user previously inserted searching a user by the id " name="Searching for a user previously inserted searching a user by the id " time="0.127">
    </testcase>
    <testcase classname="get all users ordered by online status and username get users ordered" name="get all users ordered by online status and username get users ordered" time="0.323">
    </testcase>
    <testcase classname="search users by username get users by username search" name="search users by username get users by username search" time="0.337">
    </testcase>
    <testcase classname="search users by username get users by username search" name="search users by username get users by username search" time="0.329">
    </testcase>
    <testcase classname="search users by status get users by status OK" name="search users by status get users by status OK" time="0.325">
    </testcase>
    <testcase classname="search users by status get users by status UNDEFINED" name="search users by status get users by status UNDEFINED" time="0.318">
    </testcase>
    <testcase classname="Tokens should generate token for the user" name="Tokens should generate token for the user" time="0.118">
    </testcase>
    <testcase classname="Search for users by id should return  true if user exist" name="Search for users by id should return  true if user exist" time="0.125">
    </testcase>
    <testcase classname="Search for users by id should return false if user not exist" name="Search for users by id should return false if user not exist" time="0.012">
    </testcase>
    <testcase classname="Sockets should associate socket to the user" name="Sockets should associate socket to the user" time="0.142">
    </testcase>
    <testcase classname="Sockets should remove socket associated to an user" name="Sockets should remove socket associated to an user" time="0.14">
    </testcase>
    <testcase classname="Sockets should reject a promis if socket id doesnt exist" name="Sockets should reject a promis if socket id doesnt exist" time="0.193">
    </testcase>
    <testcase classname="Chat message count should increase count" name="Chat message count should increase count" time="0.21">
    </testcase>
  </testsuite>
  <testsuite name="Create Messages" errors="0" failures="0" skipped="0" timestamp="2020-04-09T00:17:28" time="1.005" tests="4">
    <testcase classname="Create Messages Create a new message in the database" name="Create Messages Create a new message in the database" time="0.109">
    </testcase>
    <testcase classname="Getting Messages getting messages from  the database" name="Getting Messages getting messages from  the database" time="0.041">
    </testcase>
    <testcase classname="Getting Messages find messages by normal keyword" name="Getting Messages find messages by normal keyword" time="0.041">
    </testcase>
    <testcase classname="Getting Messages find messages by stop-word" name="Getting Messages find messages by stop-word" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="principal" errors="0" failures="0" skipped="0" timestamp="2020-04-09T00:17:29" time="1.344" tests="3">
    <testcase classname="principal Creating Private Messages Create a new private chat message in the database" name="principal Creating Private Messages Create a new private chat message in the database" time="0.089">
    </testcase>
    <testcase classname="principal Getting Messages getting private  messages from  the database" name="principal Getting Messages getting private  messages from  the database" time="0.042">
    </testcase>
    <testcase classname="principal Search Messages getting private  messages from  the database" name="principal Search Messages getting private  messages from  the database" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="Can creat an announcement" errors="0" failures="0" skipped="0" timestamp="2020-04-09T00:17:30" time="1.049" tests="4">
    <testcase classname="Can creat an announcement Should create an announcement" name="Can creat an announcement Should create an announcement" time="0.054">
    </testcase>
    <testcase classname="Can creat an announcement should reject announcement creation" name="Can creat an announcement should reject announcement creation" time="0.018">
    </testcase>
    <testcase classname="Can get announcements Getting all the announcement" name="Can get announcements Getting all the announcement" time="0.066">
    </testcase>
    <testcase classname="Can get announcements searching announcement by keyword" name="Can get announcements searching announcement by keyword" time="0.046">
    </testcase>
  </testsuite>
</testsuites>